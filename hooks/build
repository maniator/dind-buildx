#!/bin/bash -ex
DOCKER_REPO=${DOCKER_REPO:-maniator/docker-with-buildx}
DOCKER_TAG=${DOCKER_TAG:-latest}
IMAGE_NAME=${IMAGE_NAME:-"$DOCKER_REPO:$DOCKER_TAG"}

run_build () {
    # Install QEMU for multi arc builds
    docker run --rm --privileged \
        multiarch/qemu-user-static:register
    docker run --privileged --rm \
        tonistiigi/binfmt --install all

    # Create builder container
    docker buildx create --use \
        --driver docker-container

    echo "Build information"
    docker buildx inspect --bootstrap
    docker buildx bake -f docker-bake.hcl --print "$@"

    echo "Building image"
    docker buildx bake -f docker-bake.hcl "$@"
}

# "this" implies a pull request test build
if [ "$DOCKER_TAG" = this ]; then
    DOCKER_VERSION=latest
    BUILDX_VERSION=latest
    export DOCKER_VERSION BUILDX_VERSION DOCKER_TAG DOCKER_REPO
    run_build
else
    if [ "$DOCKER_TAG" = latest ]; then
        DOCKER_VERSION=latest
        BUILDX_VERSION=latest
        export DOCKER_VERSION BUILDX_VERSION \
                IMAGE_NAME DOCKER_TAG DOCKER_REPO
        run_build --push
    else
        grep_tags=$(echo "$DOCKER_TAG" | grep -Eo '(docker_|buildx_)?(([0-9]+\.){2}[0-9]+)')
        build_tags=$(echo "$grep_tags" | xargs -I '{}' -t sh -c "./hooks/build_tags '{}'")

        export IMAGE_NAME DOCKER_TAG DOCKER_REPO
        echo "$build_tags" > ./.env 
        # shellcheck disable=SC1091
        source ./.env
        run_build --push
    fi
fi
